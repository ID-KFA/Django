from django.db import models
from random import choice

# Create your models here.
"""
Создайте модель для запоминания бросков монеты: орёл или
решка.
Также запоминайте время броска
Добавьте статический метод для статистики по n последним
броскам монеты.
Метод должен возвращать словарь с парой ключейзначений, для орла и для решки.

Доработаем задачу 7 из урока 1, где бросали монетку, игральную кость и 
генерировали случайное число.
Маршруты могут принимать целое число - количество бросков.
Представления создают список с результатами бросков и передают его в контекст
 шаблона.
Необходимо создать универсальный шаблон для вывода результатов любого из трёх
 представлений. 
 
 Доработаем задачу про броски монеты, игральной кости и случайного числа.
Создайте форму, которая предлагает выбрать: монета, кости, числа.
Второе поле предлагает указать количество попыток от 1 до 64.

Доработаем задачу 1.
Создайте представление, которое выводит форму выбора.
В зависимости от переданных значений представление вызывает одно из трёх 
представлений, созданных на прошлом семинаре (если данные прошли проверку, 
конечно же).

"""



class HeadAndTailsModel(models.Model):
    SIDE = "heads", "tails"
    side = models.CharField(max_length=10, default=choice(SIDE))
    time = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'Монета упала стороной {self.side}'

    @staticmethod
    def get_info(self, n):
        info = HeadAndTailsModel.objects.all()[-n:]
        head_count = sum(i.side == "heads" for i in info)
        tail_count = n - head_count

        return {"head_count": head_count, "tail_count": tail_count}
